trigger:
  - main

pool:
  name: 'LocalPool'

variables:
  solution: 'C1NetCoreApp2.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  outputDir: '$(Build.ArtifactStagingDirectory)'
  defaultDir: '$(System.DefaultWorkingDirectory)'
  sonarOrganization: 'azuredevopssc'
  sonarProjectKey: 'azuredevopssc_netcoreappsc'
  sonarProjectName: 'netCoreAppSC'
  
stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: BuildNetCoreApp
        displayName: Build .NET Core App
        steps:
          - task: UseDotNet@2
            displayName: 'Install .Net Core v8'
            inputs:
              packageType: 'sdk'
              version: '8.0.403'

          - task: SonarCloudPrepare@3
            displayName: 'Prepare analysis Configuration on SonarCloud'
            inputs:
              SonarCloud: 'SonarCloudAzure2'
              organization: '$(sonarOrganization)'
              scannerMode: 'dotnet'
              projectName: '$(sonarProjectName)'
              projectKey: '$(sonarProjectKey)'

          - task: DotNetCoreCLI@2
            displayName: 'Restore Dependencies'
            inputs:
              command: 'restore'
              projects: '$(solution)'

          - task: DotNetCoreCLI@2
            displayName: 'Build Project'
            inputs:
              command: 'build'
              projects: '$(solution)'

          - task: SonarCloudAnalyze@3
            displayName: 'Run code analysis on SonarCloud'
            inputs:
              jdkversion: 'JAVA_HOME_17_X64'
              
          - task: SonarCloudPublish@3
            displayName: 'Publish quality gate result on SonarCloud'
            inputs:
              pollingTimeoutSec: '300'

          - task: DotNetCoreCLI@2
            displayName: 'Create C1NetCoreApp.zip'
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '--configuration $(buildConfiguration) --output $(outputDir)'
              
          - task: PublishBuildArtifacts@1
            displayName: 'Publish C1NetCoreApp.zip'
            inputs:
              PathtoPublish: '$(outputDir)'
              ArtifactName: 'drop'

          - script: echo Build completed successfully!!!
            displayName: 'Notification, Build Status'

  - stage: Deploy
    displayName: Deploy Stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: DeployJob
        displayName: Deploy to Azure App service
        steps:
          - task: DownloadBuildArtifacts@1
            displayName: 'Download Artifact (C1NetCoreApp.zip) from drop folder'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(defaultDir)'

          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy in Azure App Services'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure subscription 1(cec5dd57-2bf6-5tyuj-ba49-fghhekkripl,)'
              appType: 'webApp'
              WebAppName: 'ASC1NetCoreApp2'
              packageForLinux: '$(defaultDir)/**/*.zip'

          - script: echo Deployment to Azure App Service completed!!!
            displayName: 'Notification, Deployment Status'

